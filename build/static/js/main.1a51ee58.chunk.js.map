{"version":3,"sources":["components/layout/Navbar.js","context/github/githubContext.js","context/alert/AlertContext.js","components/users/Search.js","components/users/UserItem.js","context/github/GithubState.js","components/users/Users.js","components/pages/Home.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/pages/notFound.js","context/Types.js","context/github/githubReducer.js","context/alert/AlertReducer.js","context/alert/AlertState.js","components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","title","icon","className","to","defaultProps","githubContext","createContext","AlertContext","Search","useContext","GithubContext","alertContext","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","type","name","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","user","login","avatar_url","html_url","src","alt","style","width","prototype","PropTypes","object","isRequired","githubClientId","githubClientSecret","userStyle","display","gridTemplateColumns","gridGap","Users","loading","map","id","Home","RepoItem","repo","href","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","location","bio","blog","company","followers","following","public_repos","public_gists","hireable","NotFound","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","REMOVE_ALERT","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","alert","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","msg","setTimeout","About","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a51ee58.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = ({title,icon}) => {\r\n\r\n    \r\n    return (\r\n      <nav className=\"navbar bg-primary\">\r\n        <h1>\r\n          <i className={icon}></i>\r\n          {title}\r\n        </h1>\r\n        <ul>\r\n          <li><Link to='/'>Home</Link></li>\r\n          <li><Link to='/about'>About</Link></li>\r\n        </ul>\r\n        \r\n        \r\n      </nav>\r\n    )\r\n  \r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title:'Github Finder',\r\n  icon: 'fab fa-github',\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon : PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import {createContext} from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React,{useState,useContext} from 'react'\r\n\r\n\r\n// import GithubContext from '../../context/github/githubContext';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nimport AlertContext from '../../context/alert/AlertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const [text,setText] = useState('')\r\n  \r\n  const onChange = (e) => setText(e.target.value);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(text === '') {\r\n      alertContext.setAlert('Please enter something','light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n    \r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit} className=\"form\">\r\n          <input type=\"text\" name=\"text\" placeholder=\"search users\" value={text} \r\n          onChange={onChange}/>\r\n          <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\"/>\r\n        </form>\r\n        {githubContext.users.length > 0 && (<button className=\"btn btn-light btn-block\" onClick={githubContext.clearUsers}>Clear</button>)}\r\n        \r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({user:{login,html_url,avatar_url}}) => {\r\n\r\n    \r\n\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <img src={avatar_url} alt=\"\" className=\"round-img\" style={{width:'60px'}}/>\r\n        <h3>{login}</h3>\r\n        <div>\r\n          <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">More..</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nUserItem.prototype = {\r\n  user: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default  UserItem;","import React, {useReducer} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport GithubContext from './githubContext';\r\n\r\nimport GithubReducer from './githubReducer';\r\n\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_ALERT,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER\r\n} from '../Types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif(process.env.NODE_ENV !== 'production'){\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n}else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n    alert: null\r\n  }\r\n\r\n  // set the Reducer //\r\n  const [state, dispatch] = useReducer(GithubReducer,initialState);\r\n\r\n  // search github users //\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n    \r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    })\r\n  }\r\n  // get single github user //\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n    \r\n    dispatch({type: GET_USER, payload: res.data});\r\n  }\r\n\r\n\r\n  // get user \r\n\r\n  // get user repos //\r\n  const getUserRepos = async (username) => {\r\n    setLoading();\r\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n    \r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    })\r\n  }\r\n\r\n  // clear users\r\n  const clearUsers = () => dispatch({type: CLEAR_USERS});\r\n  // set loading \r\n  const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n  return <GithubContext.Provider \r\n  value={{\r\n    users: state.users,\r\n    user: state.user,\r\n    repos: state.repos,\r\n    loading: state.loading,\r\n    searchUsers,\r\n    clearUsers,\r\n    getUser,\r\n    getUserRepos\r\n  }}>\r\n    {props.children}\r\n  </GithubContext.Provider>\r\n\r\n}\r\n\r\nexport default GithubState;","import React,{ useContext} from 'react'\r\n//import PropTypes from 'prop-types';\r\n//import Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n// user //\r\nimport UserItem from './UserItem';\r\n\r\nconst Users = () =>{\r\n  const githubContext = useContext(GithubContext);\r\n  const {loading,users} = githubContext;\r\n    return ( \r\n      \r\n      <div style={userStyle}>\r\n        {users.map(user => {\r\n          return <UserItem key={user.id} user={user}/>\r\n        })}\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\n// prop types //\r\n\r\n\r\n\r\n// user styles //\r\nconst userStyle = {\r\n  display:'grid',\r\n  gridTemplateColumns:'repeat(3,1fr)',\r\n  gridGap:'1rem'\r\n}\r\n\r\nexport default Users;","import React,{Fragment} from 'react'\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RepoItem = ({repo}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>\r\n        <a href={repo.html_url}>{repo.name}</a>\r\n      </h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default RepoItem;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({repos}) => {\r\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id}/>)\r\n}\r\n\r\nRepos.propTypes ={\r\n  repos: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Repos;","import React, { useEffect,Fragment,useContext } from 'react'\r\n//import Spinner from '../layout/Spinner';\r\n// import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\n\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\n\r\nconst User = ({match}) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const {getUser,user,loading,repos,getUserRepos} = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    //esling-disable-nex-line\r\n  },[]);\r\n\r\n  \r\n  \r\n  \r\n    const {\r\n      name,\r\n      avatar_url,\r\n      location,\r\n      bio,\r\n      blog,\r\n      login,\r\n      html_url,\r\n      company,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n      public_gists,\r\n      hireable\r\n    } = user;\r\n\r\n    // if(loading) {\r\n    //   return <Spinner/>\r\n    // }\r\n    return (\r\n      <Fragment>\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Back to Search\r\n        </Link>\r\n         Hireable: {''}\r\n         {hireable ? <i className=\"fa fa-check text-green\"></i> : <i className=\"fas fa-times-circle\"></i>}\r\n         <div className=\"card grid-2\">\r\n           <div className=\"all-center\">\r\n             <img src={avatar_url} className=\"round-img\" style={{width:'150px'}} alt=\"\"/>\r\n             <h1>{name}</h1>\r\n             <p>Location: {location}</p>\r\n           </div>\r\n           <div>\r\n           {bio && <Fragment>\r\n             <h3>Bio</h3>\r\n             <p>{bio}</p>\r\n             </Fragment>}\r\n             <a href={html_url} className=\"btn btn-dark my-1\">Visit github profile</a>\r\n             <ul>\r\n               <li>\r\n                 {login && <Fragment>\r\n                   <strong>Username :</strong>{login}\r\n                   </Fragment>}\r\n               </li>\r\n               <li>\r\n                 {company && <Fragment>\r\n                   <strong>Company :</strong>{company}\r\n                   </Fragment>}\r\n               </li>\r\n               <li>\r\n                 {blog && <Fragment>\r\n                   <strong>Website :</strong>{blog}\r\n                   </Fragment>}\r\n               </li>\r\n               \r\n             </ul>\r\n           </div>\r\n         </div>\r\n         {/* badges */}\r\n         <div className=\"card text-center\">\r\n           <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n           <div className=\"badge badge-success\">Following: {following}</div>\r\n           <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n           <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n         </div>\r\n         <Repos repos={repos} />\r\n\r\n      </Fragment>\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport default User;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n      <p className=\"lead\">Looks like you have lost..</p>\r\n      <h3>Go back to home</h3>\r\n      <Link to='/' className=\"btn btn-dark\">\r\n        go back \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_ALERT,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER\r\n} from '../Types';\r\n\r\nexport default (state,action) => {\r\n  switch(action.type) {\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false\r\n      }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      }\r\n      case GET_USER:\r\n        return {\r\n          ...state,\r\n          user: action.payload,\r\n          loading: false\r\n        }\r\n      case GET_REPOS:\r\n        return {\r\n          ...state,\r\n          repos: action.payload,\r\n          loading: false\r\n        }\r\n    default :\r\n    return state;\r\n  }\r\n}\r\n","import {SET_ALERT, REMOVE_ALERT} from '../Types';\r\n\r\nexport default(state,action) => {\r\n  switch(action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default :\r\n    return state;\r\n  }\r\n}","import React,{useReducer} from 'react';\r\nimport AlertContext from './AlertContext';\r\nimport AlertReducer from './AlertReducer';\r\nimport {\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from '../Types';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = null;\r\n  const [state,dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // show alert //\r\n  const setAlert = (msg,type) => {\r\n    dispatch({type: SET_ALERT,payload:{msg,type}});\r\n\r\n    // time out //\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT})\r\n    ,5000);\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      alert: state,\r\n      setAlert\r\n    }}>\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AlertState;","import React,{Fragment} from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users</p>\r\n      <p>version 1.0.0</p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\n\n// components //\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\n\nimport User from './components/users/User';\n\nimport NotFound from './components/pages/notFound';\n\n// import Alert from './components/layout/Alert';\n\n// github state //\nimport GithubState from './context/github/GithubState';\n\n// alert state //\nimport AlertState from './context/alert/AlertState';\n\n\n\n// import pages //\nimport About from './components/pages/About';\n  \n  const App = () => {\n\n    \n   \n    return (\n      <GithubState>\n        <AlertState>\n          <Router>\n          <div className=\"App\">\n            <Navbar />\n            \n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n\n                <Route exact path=\"/about\" component={About}/>\n\n                <Route exact path=\"/user/:login\" component={User} />\n              \n                <Route component={NotFound} />\n              </Switch>\n            </div>\n            \n          </div>\n          </Router>\n       </AlertState>\n      </GithubState>\n    )\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}